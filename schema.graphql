type Vault @entity {
  id: ID!
  vaultId: BigInt!
  creator: String!
  message: String!
  token: String
  totalAmount: BigInt!
  totalClaimedAmount: BigInt!
  lockTime: BigInt
  donations: [Donation!]! @derivedFrom(field: "vault")
  claims: [Claim!]! @derivedFrom(field: "vault")
  settlements: [Settlement!]! @derivedFrom(field: "vault")
  withdrawals: [Withdrawal!]! @derivedFrom(field: "vault")
  createdAt: BigInt!
  updatedAt: BigInt!
}

type Donation @entity {
  id: ID!
  vault: Vault!
  donor: String!
  token: String!
  amount: BigInt!
  blockNumber: BigInt!
  timestamp: BigInt!
  transactionHash: String!
}

type Settlement @entity {
  id: ID!
  vault: Vault!
  claimer: String!
  token: String!
  maxClaimableAmount: BigInt!
  blockNumber: BigInt!
  timestamp: BigInt!
  transactionHash: String!
}

type Claim @entity {
  id: ID!
  vault: Vault!
  claimer: String!
  token: String!
  amount: BigInt!
  blockNumber: BigInt!
  timestamp: BigInt!
  transactionHash: String!
}

type Withdrawal @entity {
  id: ID!
  vault: Vault!
  withdrawer: String!
  token: String!
  amount: BigInt!
  blockNumber: BigInt!
  timestamp: BigInt!
  transactionHash: String!
}

type EmergencyMode @entity {
  id: ID!
  mode: Boolean!
  timestamp: BigInt!
  blockNumber: BigInt!
  transactionHash: String!
}

type OwnershipTransfer @entity {
  id: ID!
  previousOwner: String!
  newOwner: String!
  timestamp: BigInt!
  blockNumber: BigInt!
  transactionHash: String!
}
